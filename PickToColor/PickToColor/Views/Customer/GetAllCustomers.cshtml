@model PagedList.IPagedList<PickToColor.Models.CustomerModel>
@using PagedList.Mvc;
<table class="table table-bordered" id="tblCustomers">
    <tr class="thead-dark text-light text-center">
        <th class="text-center"><input type="checkbox" id="chkHeader" class="wh-20" onclick="ToggleCheckBoxes(this);" /></th>
        <th>
            Customer Code
        </th>
        <th>
            Customer Name
        </th>
        <th>
            Description
        </th>
        <th>
            Active Since
        </th>
        <th>Actions</th>
    </tr>

    @if (Model != null && Model.Any())
    {
        foreach (var item in Model)
        {
            <tr>
                <td class="text-center"><input type="checkbox" id="chkHeader" class="child-item wh-20" data-id='@item.CustomerID' onclick="ToggleHeaderCheckBox(this);" /></td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedOn)
                </td>
                <td class="text-center">
                    <a class="btn btn-sm btn-primary text-light mb-3 mb-sm-0" onclick="OnEdit(@item.CustomerID,'@HttpUtility.JavaScriptStringEncode(item.CustomerCode)','@HttpUtility.JavaScriptStringEncode(item.CustomerName)', '@HttpUtility.JavaScriptStringEncode(item.Description)')">
                        <i class="fas fa-pencil-alt"></i> Edit
                    </a> @*&nbsp;&nbsp;
                        <a class="btn btn-sm btn-danger text-light mb-3 mb-sm-0" onclick="ConfirmDelete(@item.CustomerID);">
                            <i class="fas fa-trash-alt"></i> Delete
                        </a>*@

                </td>
            </tr>
        }
    }
    else
    {
        <tr>
            <td colspan="6">
                <div class="alert alert-dark text-muted text-center">No records found.</div>
            </td>
        </tr>
    }
    @if (Model.PageCount > 0)
    {
        <tr>
            <td colspan="6">
                <div class="float-left">
                    <nav>
                        @Html.PagedListPager(Model, page => string.Format("javascript:LoadPage({0})", page),
                        new PagedListRenderOptions()
                        {
                            UlElementClasses = new List<string> { "pagination", "pagination-sm", "mb-3", "mb-sm-0" },
                            LiElementClasses = new List<string> { "page-item" },
                            FunctionToTransformEachPageLink = (li, a) =>
                            {
                                a.AddCssClass("page-link");
                                li.InnerHtml = a.ToString();
                                return li;
                            }
                        })
                    </nav>
                </div>
                <div class="float-right">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                </div>
            </td>
        </tr>
    }
</table>
<div class="modal fade" id="divEditCustomer" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Edit Customer details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Customer Code <sup><i class="fas fa-asterisk fa-1x text-danger"></i></sup></label>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" id="txtUpdateCustomerCode" />
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Customer Name <sup><i class="fas fa-asterisk fa-1x text-danger"></i></sup></label>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" id="txtUpdateCustomerName" />
                    </div>
                </div>
                <div class="form-group row">
                    <label class="col-sm-4 col-form-label">Description</label>
                    <div class="col-sm-8">
                        <textarea type="text" class="form-control" id="txtUpdateDescription"></textarea>
                    </div>
                </div>
                <div class="row row-mb-minus10">
                    <div class="col-12">
                        <sup><i class="fas fa-asterisk fa-1x text-danger"></i>-Field(s) required</sup>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnModalConfirmOK" onclick="UpdateCustomer();">Ok</button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<script>
    //var PageNumber = 1;
    function OnEdit(CusId, cusCode, cusName, Desc) {

        $('#divEditCustomer').modal('show');
        ClearUpdateForm();
        $('#txtUpdateCustomerCode').val(cusCode);
        $('#txtUpdateCustomerName').val(cusName);
        $('#txtUpdateDescription').val(Desc);
        $('#txtUpdateCustomerCode').data('customerid', CusId);


    }
    function UpdateCustomer() {
        var IsUpdateValid = true;
        if ($.trim($('#txtUpdateCustomerCode').val()) == '') {
            ShowError($('#txtUpdateCustomerCode'), 'Please enter the Customer Code');
            IsUpdateValid = false;
        }
        if ($.trim($('#txtUpdateCustomerName').val()) == '') {
            ShowError($('#txtUpdateCustomerName'), 'Please enter the Customer Name');
            IsUpdateValid = false;
        }

        if (!IsUpdateValid) return false;

        $.ajax({
            url: '@Url.Action("Edit","Customer")',
            type: 'POST',
            data: { CustomerID: $.trim($('#txtUpdateCustomerCode').data('customerid')), CustomerCode: $.trim($('#txtUpdateCustomerCode').val()), CustomerName: $.trim($('#txtUpdateCustomerName').val()), Description: $.trim($('#txtUpdateDescription').val()) },
            success: function (result) {
                $('#tblCustomers').load('@Url.Action("GetAllCustomers", "Customer")');
                ShowModalDialog('The Customer account is updated successfully', 'Successful Update');
            },
            error: function (xhr, textStatus, errorThrown) {
                ShowModalDialog(xhr.responseText, 'Customer details update failed!');
            }
        });
        $('#divEditCustomer').modal('hide');
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    }




    function ClearUpdateForm() {
        $('#txtUpdateCustomerCode').val('');;
        $('#txtUpdateCustomerName').val('');
        $('#txtUpdateDescription').val('');
        $('#txtUpdateCustomerCode').data('customerid', '');


    }

    function LoadPage(pagenumber) {
        ShowLoading();
        //PageNumber = pagenumber;
        $('#tblCustomers').load('@Url.Action("GetAllCustomers", "Customer")', { pageno: pagenumber }, function () {
            HideLoading();
        });
    }

    function ConfirmDelete() {
        if ($('#tblCustomers').find('tr:not(:has(th)) td :checkbox.child-item:checked').length == 0) {
            ShowModalDialog('Please select a customer to delete', 'Information');
            return;
        }

        var ItemsToDelete = new Array();
        $('#tblCustomers').find('tr:not(:has(th)) td :checkbox.child-item:checked').each(function () {
            ItemsToDelete.push($(this).data('id'));
        });


        bootbox.confirm("Are you sure want to delete the selected Customer(s)?", function (result) {
            if (result) {
                $.ajax({
                    url: '@Url.Action("Delete", "Customer")',
                    type: 'POST',
                    data: { CustomerIDs: ItemsToDelete },
                    success: function (result) {
                        $('#tblCustomers').load('@Url.Action("GetAllCustomers", "Customer")', { pageno: 1 });
                        ShowModalDialog('The selected Customer(s) is removed successfully', 'Successful Delete');
                    },
                    error: function (errormessage) {
                        ShowModalDialog('The delete operation has failed. Please try again later after some time.', 'Delete failed!');
                    }
                });
            }
        });
    }

</script>
